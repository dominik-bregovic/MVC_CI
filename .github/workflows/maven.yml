# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Clean project from target directory
        run: mvn clean

      - name: Validate source-code
        run: mvn validate

      - name: Compile source-code
        run: mvn compile

      - name: test source-code
        run: mvn test

      - name: Package source-code and exclude testing
        run: mvn -DskipTests package

      - name: Generate doku
        run: mvn site

        #verify install and deploy is planed and has to be implemented

      - name: List directories
        run: ls -al

      - name: Go to Target
        run: |
          cd target
          ls -a

      #Docker
      - name: Build Docker Image
        run: |
          docker build -t tcmtestaccount/mvc_image:${{ github.sha }} .

      - name: Login to Docker Hub
      - uses: actions/checkout@v3
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Build Docker Image
#        run: docker tag tcmtestacccount/mvc_image:${{ github.sha }} tcmtestacccount/mvc_image:latest

      - name: Push Docker Image
        run: docker push tcmtestaccount/mvc_image:${{ github.sha }}

#      - name: Build & Push Image
#        run: |
#          echo "${{ secrets.DOCKER_PASSWORD}}" | docker login -u "tcmtestaccount" --password-stdin
#          docker image build -t tcmtestaccount/myapp:v1 .
#          docker push tcmtestaccount/myapp:v1




       
      

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
