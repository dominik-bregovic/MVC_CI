# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3 #Chaching dependencies to speed up workflow
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      #Build and Compile
      - name: Clean project from target directory
        run: mvn clean

      - name: Validate source-code
        run: mvn validate

      - name: Compile source-code
        run: mvn compile

      - name: test source-code
        run: mvn test

      - name: Package source-code and exclude testing
        run: mvn -DskipTests package

      - name: Generate doku
        run: mvn site

      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

      #verify install and deploy is planed and has to be implemented
      - name: List directories
        run: ls -al

      - name: Go to Target
        run: |
          cd target
          ls -a
  

  docker_hub:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      #Docker
      - name: Build Docker Image
        run: |
          docker build -t tcmtestaccount/mvc_image:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push tcmtestaccount/mvc_image:${{ github.sha }}


      #Docker-Compose
      - uses: isbang/compose-action@v1.4.1
        with:
          down-flags: "--volumes"
          #services: here fill in the service-s you want to get up (websites)
